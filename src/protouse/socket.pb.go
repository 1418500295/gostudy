// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: socket.protos

package protouse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_UpdateMatch MessageType = 0
	MessageType_BetStop     MessageType = 1
	MessageType_Maintenance MessageType = 2
	MessageType_Restore     MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "UpdateMatch",
		1: "BetStop",
		2: "Maintenance",
		3: "Restore",
	}
	MessageType_value = map[string]int32{
		"UpdateMatch": 0,
		"BetStop":     1,
		"Maintenance": 2,
		"Restore":     3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_socket_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_socket_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{0}
}

type SocketAction int32

const (
	SocketAction_Sub   SocketAction = 0
	SocketAction_UnSub SocketAction = 1
)

// Enum value maps for SocketAction.
var (
	SocketAction_name = map[int32]string{
		0: "Sub",
		1: "UnSub",
	}
	SocketAction_value = map[string]int32{
		"Sub":   0,
		"UnSub": 1,
	}
)

func (x SocketAction) Enum() *SocketAction {
	p := new(SocketAction)
	*p = x
	return p
}

func (x SocketAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocketAction) Descriptor() protoreflect.EnumDescriptor {
	return file_socket_proto_enumTypes[1].Descriptor()
}

func (SocketAction) Type() protoreflect.EnumType {
	return &file_socket_proto_enumTypes[1]
}

func (x SocketAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SocketAction.Descriptor instead.
func (SocketAction) EnumDescriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{1}
}

type SocketScope int32

const (
	SocketScope_Global  SocketScope = 0 // 无效
	SocketScope_List    SocketScope = 1 // 列表  matchIds  marketTypeIds
	SocketScope_Detail  SocketScope = 2 // matchIds
	SocketScope_BetSlip SocketScope = 3 // matchIds  marketTypeIds
)

// Enum value maps for SocketScope.
var (
	SocketScope_name = map[int32]string{
		0: "Global",
		1: "List",
		2: "Detail",
		3: "BetSlip",
	}
	SocketScope_value = map[string]int32{
		"Global":  0,
		"List":    1,
		"Detail":  2,
		"BetSlip": 3,
	}
)

func (x SocketScope) Enum() *SocketScope {
	p := new(SocketScope)
	*p = x
	return p
}

func (x SocketScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocketScope) Descriptor() protoreflect.EnumDescriptor {
	return file_socket_proto_enumTypes[2].Descriptor()
}

func (SocketScope) Type() protoreflect.EnumType {
	return &file_socket_proto_enumTypes[2]
}

func (x SocketScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SocketScope.Descriptor instead.
func (SocketScope) EnumDescriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{2}
}

type BetStopMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketGroups []uint32 `protobuf:"varint,1,rep,packed,name=marketGroups,proto3" json:"marketGroups,omitempty"`
}

func (x *BetStopMessage) Reset() {
	*x = BetStopMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetStopMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetStopMessage) ProtoMessage() {}

func (x *BetStopMessage) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetStopMessage.ProtoReflect.Descriptor instead.
func (*BetStopMessage) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{0}
}

func (x *BetStopMessage) GetMarketGroups() []uint32 {
	if x != nil {
		return x.MarketGroups
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MessageType         `protobuf:"varint,1,opt,name=type,proto3,enum=feedApiProto.MessageType" json:"type,omitempty"`
	Data *MatchUpdateMessage `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_UpdateMatch
}

func (x *Message) GetData() *MatchUpdateMessage {
	if x != nil {
		return x.Data
	}
	return nil
}

type MatchUpdateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId  string                 `protobuf:"bytes,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
	StatusId uint32                 `protobuf:"varint,2,opt,name=statusId,proto3" json:"statusId,omitempty"`
	Markets  []*MarketUpdateMessage `protobuf:"bytes,3,rep,name=markets,proto3" json:"markets,omitempty"`
	Infos    []*InfoUpdateMessage   `protobuf:"bytes,4,rep,name=infos,proto3" json:"infos,omitempty"`
	Groups   *BetStopMessage        `protobuf:"bytes,5,opt,name=groups,proto3" json:"groups,omitempty"`
}

func (x *MatchUpdateMessage) Reset() {
	*x = MatchUpdateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchUpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchUpdateMessage) ProtoMessage() {}

func (x *MatchUpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchUpdateMessage.ProtoReflect.Descriptor instead.
func (*MatchUpdateMessage) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{2}
}

func (x *MatchUpdateMessage) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchUpdateMessage) GetStatusId() uint32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *MatchUpdateMessage) GetMarkets() []*MarketUpdateMessage {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *MatchUpdateMessage) GetInfos() []*InfoUpdateMessage {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *MatchUpdateMessage) GetGroups() *BetStopMessage {
	if x != nil {
		return x.Groups
	}
	return nil
}

type MarketUpdateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketId string `protobuf:"bytes,1,opt,name=marketId,proto3" json:"marketId,omitempty"`
	// market bettingtype id
	MarketTypeId uint64                  `protobuf:"varint,2,opt,name=marketTypeId,proto3" json:"marketTypeId,omitempty"`
	StatusId     uint32                  `protobuf:"varint,3,opt,name=statusId,proto3" json:"statusId,omitempty"`
	Outcomes     []*OutcomeUpdateMessage `protobuf:"bytes,4,rep,name=outcomes,proto3" json:"outcomes,omitempty"`
}

func (x *MarketUpdateMessage) Reset() {
	*x = MarketUpdateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketUpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketUpdateMessage) ProtoMessage() {}

func (x *MarketUpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketUpdateMessage.ProtoReflect.Descriptor instead.
func (*MarketUpdateMessage) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{3}
}

func (x *MarketUpdateMessage) GetMarketId() string {
	if x != nil {
		return x.MarketId
	}
	return ""
}

func (x *MarketUpdateMessage) GetMarketTypeId() uint64 {
	if x != nil {
		return x.MarketTypeId
	}
	return 0
}

func (x *MarketUpdateMessage) GetStatusId() uint32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *MarketUpdateMessage) GetOutcomes() []*OutcomeUpdateMessage {
	if x != nil {
		return x.Outcomes
	}
	return nil
}

type OutcomeUpdateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutcomeId string `protobuf:"bytes,1,opt,name=outcomeId,proto3" json:"outcomeId,omitempty"`
	Odds      string `protobuf:"bytes,2,opt,name=odds,proto3" json:"odds,omitempty"`
	StatusId  uint32 `protobuf:"varint,3,opt,name=statusId,proto3" json:"statusId,omitempty"`
}

func (x *OutcomeUpdateMessage) Reset() {
	*x = OutcomeUpdateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutcomeUpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutcomeUpdateMessage) ProtoMessage() {}

func (x *OutcomeUpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutcomeUpdateMessage.ProtoReflect.Descriptor instead.
func (*OutcomeUpdateMessage) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{4}
}

func (x *OutcomeUpdateMessage) GetOutcomeId() string {
	if x != nil {
		return x.OutcomeId
	}
	return ""
}

func (x *OutcomeUpdateMessage) GetOdds() string {
	if x != nil {
		return x.Odds
	}
	return ""
}

func (x *OutcomeUpdateMessage) GetStatusId() uint32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

type InfoUpdateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// message type
	TypeID uint32 `protobuf:"varint,1,opt,name=typeID,proto3" json:"typeID,omitempty"`
	// match eventpart
	MatchStatus uint32  `protobuf:"varint,2,opt,name=matchStatus,proto3" json:"matchStatus,omitempty"`
	Number      uint32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Value1      float64 `protobuf:"fixed64,4,opt,name=value1,proto3" json:"value1,omitempty"`
	// Types that are assignable to Value:
	//	*InfoUpdateMessage_Value2
	Value     isInfoUpdateMessage_Value `protobuf_oneof:"value"`
	UpdatedAt *timestamppb.Timestamp    `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *InfoUpdateMessage) Reset() {
	*x = InfoUpdateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoUpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoUpdateMessage) ProtoMessage() {}

func (x *InfoUpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoUpdateMessage.ProtoReflect.Descriptor instead.
func (*InfoUpdateMessage) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{5}
}

func (x *InfoUpdateMessage) GetTypeID() uint32 {
	if x != nil {
		return x.TypeID
	}
	return 0
}

func (x *InfoUpdateMessage) GetMatchStatus() uint32 {
	if x != nil {
		return x.MatchStatus
	}
	return 0
}

func (x *InfoUpdateMessage) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *InfoUpdateMessage) GetValue1() float64 {
	if x != nil {
		return x.Value1
	}
	return 0
}

func (m *InfoUpdateMessage) GetValue() isInfoUpdateMessage_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *InfoUpdateMessage) GetValue2() float64 {
	if x, ok := x.GetValue().(*InfoUpdateMessage_Value2); ok {
		return x.Value2
	}
	return 0
}

func (x *InfoUpdateMessage) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type isInfoUpdateMessage_Value interface {
	isInfoUpdateMessage_Value()
}

type InfoUpdateMessage_Value2 struct {
	Value2 float64 `protobuf:"fixed64,5,opt,name=value2,proto3,oneof"`
}

func (*InfoUpdateMessage_Value2) isInfoUpdateMessage_Value() {}

type PayloadAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Action SocketAction `protobuf:"varint,1,opt,name=action,proto3,enum=feedApiProto.SocketAction" json:"action,omitempty"`
	// a match id list
	MatchIds []string `protobuf:"bytes,2,rep,name=matchIds,proto3" json:"matchIds,omitempty"`
	// the markettype id list
	MarketTypeIds []uint64    `protobuf:"varint,3,rep,packed,name=marketTypeIds,proto3" json:"marketTypeIds,omitempty"`
	Scope         SocketScope `protobuf:"varint,4,opt,name=scope,proto3,enum=feedApiProto.SocketScope" json:"scope,omitempty"`
}

func (x *PayloadAction) Reset() {
	*x = PayloadAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadAction) ProtoMessage() {}

func (x *PayloadAction) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadAction.ProtoReflect.Descriptor instead.
func (*PayloadAction) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{6}
}

func (x *PayloadAction) GetAction() SocketAction {
	if x != nil {
		return x.Action
	}
	return SocketAction_Sub
}

func (x *PayloadAction) GetMatchIds() []string {
	if x != nil {
		return x.MatchIds
	}
	return nil
}

func (x *PayloadAction) GetMarketTypeIds() []uint64 {
	if x != nil {
		return x.MarketTypeIds
	}
	return nil
}

func (x *PayloadAction) GetScope() SocketScope {
	if x != nil {
		return x.Scope
	}
	return SocketScope_Global
}

var File_socket_proto protoreflect.FileDescriptor

var file_socket_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x66, 0x65, 0x65, 0x64, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a,
	0x0e, 0x42, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0x6e, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xf4, 0x01, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64,
	0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x35, 0x0a,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x41, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x3e,
	0x0a, 0x08, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x22, 0x64,
	0x0a, 0x14, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x31, 0x12, 0x18, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2a, 0x49, 0x0a, 0x0b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x10, 0x03, 0x2a, 0x22, 0x0a, 0x0c, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x75, 0x62, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x10, 0x01, 0x2a, 0x3c, 0x0a, 0x0b, 0x53, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x65,
	0x74, 0x53, 0x6c, 0x69, 0x70, 0x10, 0x03, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_socket_proto_rawDescOnce sync.Once
	file_socket_proto_rawDescData = file_socket_proto_rawDesc
)

func file_socket_proto_rawDescGZIP() []byte {
	file_socket_proto_rawDescOnce.Do(func() {
		file_socket_proto_rawDescData = protoimpl.X.CompressGZIP(file_socket_proto_rawDescData)
	})
	return file_socket_proto_rawDescData
}

var file_socket_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_socket_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_socket_proto_goTypes = []interface{}{
	(MessageType)(0),              // 0: feedApiProto.MessageType
	(SocketAction)(0),             // 1: feedApiProto.SocketAction
	(SocketScope)(0),              // 2: feedApiProto.SocketScope
	(*BetStopMessage)(nil),        // 3: feedApiProto.BetStopMessage
	(*Message)(nil),               // 4: feedApiProto.Message
	(*MatchUpdateMessage)(nil),    // 5: feedApiProto.MatchUpdateMessage
	(*MarketUpdateMessage)(nil),   // 6: feedApiProto.MarketUpdateMessage
	(*OutcomeUpdateMessage)(nil),  // 7: feedApiProto.OutcomeUpdateMessage
	(*InfoUpdateMessage)(nil),     // 8: feedApiProto.InfoUpdateMessage
	(*PayloadAction)(nil),         // 9: feedApiProto.PayloadAction
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_socket_proto_depIdxs = []int32{
	0,  // 0: feedApiProto.Message.type:type_name -> feedApiProto.MessageType
	5,  // 1: feedApiProto.Message.data:type_name -> feedApiProto.MatchUpdateMessage
	6,  // 2: feedApiProto.MatchUpdateMessage.markets:type_name -> feedApiProto.MarketUpdateMessage
	8,  // 3: feedApiProto.MatchUpdateMessage.infos:type_name -> feedApiProto.InfoUpdateMessage
	3,  // 4: feedApiProto.MatchUpdateMessage.groups:type_name -> feedApiProto.BetStopMessage
	7,  // 5: feedApiProto.MarketUpdateMessage.outcomes:type_name -> feedApiProto.OutcomeUpdateMessage
	10, // 6: feedApiProto.InfoUpdateMessage.updatedAt:type_name -> google.protobuf.Timestamp
	1,  // 7: feedApiProto.PayloadAction.action:type_name -> feedApiProto.SocketAction
	2,  // 8: feedApiProto.PayloadAction.scope:type_name -> feedApiProto.SocketScope
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_socket_proto_init() }
func file_socket_proto_init() {
	if File_socket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_socket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetStopMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchUpdateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketUpdateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutcomeUpdateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoUpdateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_socket_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*InfoUpdateMessage_Value2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_socket_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_socket_proto_goTypes,
		DependencyIndexes: file_socket_proto_depIdxs,
		EnumInfos:         file_socket_proto_enumTypes,
		MessageInfos:      file_socket_proto_msgTypes,
	}.Build()
	File_socket_proto = out.File
	file_socket_proto_rawDesc = nil
	file_socket_proto_goTypes = nil
	file_socket_proto_depIdxs = nil
}
